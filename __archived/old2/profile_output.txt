Timer unit: 1e-07 s

Total time: 1.44114 s
File: E:\NextCloud\paper3\zpipe_base.py
Function: main at line 28

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    28                                           @line_profiler.profile
    29                                           def main():
    30                                               global base_timm_model, class_names, model_path
    31                                               # Load model + transforms
    32         1   13754455.0 1.38e+07     95.4      model = load_model(base_timm_model, class_names, model_path)
    33         1        632.0    632.0      0.0      device = next(model.parameters()).device
    34                                           
    35         2        170.0     85.0      0.0      transform = transforms.Compose(
    36         1          4.0      4.0      0.0          [
    37         1       1108.0   1108.0      0.0              transforms.Resize((360, 640)),  # keep ratio fixed for inference
    38         1         87.0     87.0      0.0              transforms.ToTensor(),
    39         1        534.0    534.0      0.0              transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
    40                                                   ]
    41                                               )
    42                                           
    43         1          4.0      4.0      0.0      video_source = r"E:\NextCloud\paper3\datasets\TestVideos\smallfire.mp4"
    44         1     242434.0 242434.0      1.7      cap = cv2.VideoCapture(video_source)
    45                                           
    46         1         22.0     22.0      0.0      NUM_FRAME_TRIAL = 20
    47         1          4.0      4.0      0.0      frame_idx = 0
    48         1          8.0      8.0      0.0      time_ls = []
    49                                           
    50         1          6.0      6.0      0.0      while True:
    51         1     302021.0 302021.0      2.1          ret, frame = cap.read()
    52         1         15.0     15.0      0.0          if not ret:
    53                                                       break
    54                                           
    55         1         10.0     10.0      0.0          frame_idx += 1
    56         1         35.0     35.0      0.0          start_time = time.time()
    57                                           
    58                                                   # Preprocess frame
    59         1      85539.0  85539.0      0.6          img_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    60         1      23161.0  23161.0      0.2          pil_img = Image.fromarray(img_rgb)
    61         1       1173.0   1173.0      0.0          img_tensor = transform(img_rgb).unsqueeze(0).to(device)
    62                                           
    63                                                   # Inference
    64                                                   with torch.no_grad():
    65                                                       outputs = model(img_tensor)
    66                                                       probs = torch.softmax(outputs, dim=1)[0]
    67                                                       conf, pred_class = torch.max(probs, 0)
    68                                           
    69                                                   end_time = time.time()
    70                                                   elapsed = end_time - start_time
    71                                                   time_ls.append(elapsed)
    72                                           
    73                                                   # Overlay prediction on frame
    74                                                   label = f"{class_names[pred_class]} ({conf.item()*100:.1f}%)"
    75                                                   fps = 1.0 / elapsed if elapsed > 0 else 0
    76                                                   cv2.putText(
    77                                                       frame,
    78                                                       f"{label} | FPS: {fps:.2f}",
    79                                                       (20, 40),
    80                                                       cv2.FONT_HERSHEY_SIMPLEX,
    81                                                       1,
    82                                                       (0, 255, 0),
    83                                                       2,
    84                                                   )
    85                                           
    86                                                   cv2.imshow("Prediction", frame)
    87                                           
    88                                                   # stop after NUM_FRAME_TRIAL or ESC
    89                                                   if frame_idx >= NUM_FRAME_TRIAL:
    90                                                       break
    91                                                   if cv2.waitKey(1) & 0xFF == 27:  # ESC
    92                                                       break
    93                                           
    94                                               cap.release()
    95                                               cv2.destroyAllWindows()
    96                                           
    97                                               # drop first frame (cold start) timing
    98                                               if len(time_ls) > 1:
    99                                                   time_ls = time_ls[1:]
   100                                           
   101                                               avg_fps = 1.0 / np.mean(time_ls) if len(time_ls) > 0 else 0
   102                                               print(f"Processed {frame_idx} frames. Avg FPS: {avg_fps:.2f}")

  1.44 seconds - E:\NextCloud\paper3\zpipe_base.py:28 - main
